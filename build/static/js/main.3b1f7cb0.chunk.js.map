{"version":3,"sources":["components/base/Container/Container.js","components/base/Typography/Title.js","components/base/Typography/Text.js","components/base/Alert/Alert.js","components/base/Wrapper/Wrapper.js","components/base/Loader/Loader.js","components/base/Images/Arrow.js","components/base/Images/Clear.js","components/base/Images/Clouds.js","components/base/Images/Fog.js","components/base/Images/Humidity.js","components/base/Images/Mist.js","components/base/Images/Placeholder.js","components/base/Images/Rain.js","components/base/Images/Search.js","components/base/Images/Snow.js","components/base/Images/Thermometer.js","components/base/Images/Thunderstorm.js","components/base/Images/Tornado.js","components/base/Images/Up.js","components/base/Images/Wind.js","components/weather/Items/Condition.js","components/weather/Items/Day.js","components/weather/Items/Date.js","components/weather/Items/FeelsLike.js","components/weather/Items/Humidity.js","components/weather/Items/Link.js","components/weather/Items/Temp.js","components/weather/Weather/Weather.js","components/weather/Forecast/Forecast.js","components/weather/City/City.js","controllers/weather/index.js","components/pages/Main/Main.js","components/base/BackButton/BackButton.js","components/weather/ForecastChart/ForecastChart.js","components/weather/ForecastChart/getForecastChart.js","components/pages/Day/Day.js","components/pages/Error/Error.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["Container","children","className","Title","type","Text","align","Alert","title","text","Wrapper","Loader","Arrow","version","id","xmlns","x","y","viewBox","d","Clear","enableBackground","height","width","Clouds","Fog","Humidity","cx","cy","r","Mist","Placeholder","Rain","Search","Snow","Thermometer","Thunderstorm","Tornado","Up","Wind","Condition","icon","description","renderIcon","Day","date","isToday","isForecast","moment","format","Date","FeelsLike","temp","Math","round","value","Link","path","label","to","Temp","Weather","weather","isDay","dayOfWeekFormat","dt_txt","main","toLowerCase","humidity","feels_like","Forecast","forecast","map","item","index","day","City","handleCity","changeCity","city","showForm","setShowForm","toggleForm","onChange","placeholder","onClick","API_KEY","getWeather","a","options","method","url","fetch","request","status","json","console","log","getForecast","response","list","isSame","push","hour","Main","useState","isWeatherLoaded","setWeatherLoaded","isForecastLoaded","setForecastLoaded","setWeather","setForecast","useEffect","data","fetchData","BackButton","color","ForecastChart","getForecastChart","ctx","document","getElementById","getContext","legend","display","tooltips","enabled","custom","tooltipModel","tooltipEl","createElement","innerHTML","body","appendChild","opacity","innerHtml","classList","remove","add","yAlign","dataPoints","getTooltipTitle","getTooltipBody","style","left","caretX","top","caretY","padding","pointerEvents","getTooltip","scales","xAxes","gridLines","lineWidth","yAxes","layout","right","bottom","Chart","labels","datasets","backgroundColor","pointBackgroundColor","pointHoverBackgroundColor","borderColor","borderWidth","lineTension","setCity","toDate","fetchWeather","preview","get","renderWeather","Error","App","today","key","initialValue","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","formCity","setFormCity","e","target","days","set","renderDays","exact","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.3b1f7cb0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport React from 'react';\n\nimport './style.scss';\n\nconst Container = ({ children }) => {\n\treturn (\n\t\t<div className=\"container\">{children}</div>\n\t);\n};\n\nContainer.propTypes = {\n\tchildren: PropTypes.array,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Title = ({ children, type, className }) => {\n    switch (type) {\n        case 'h1':\n            return <h1 className={`title title--${type}${className ? ` ${className}` : ''}`}>{children}</h1>;\n        case 'h2':\n            return <h2 className={`title title--${type}${className ? ` ${className}` : ''}`}>{children}</h2>;\n        case 'h3':\n            return <h3 className={`title title--${type}${className ? ` ${className}` : ''}`}>{children}</h3>;\n        case 'h4':\n            return <h4 className={`title title--${type}${className ? ` ${className}` : ''}`}>{children}</h4>;\n        case 'h5':\n            return <h5 className={`title title--${type}${className ? ` ${className}` : ''}`}>{children}</h5>;\n        case 'h6':\n            return <h6 className={`title title--${type}${className ? ` ${className}` : ''}`}>{children}</h6>;\n        default:\n            return null;\n    }\n};\n\nTitle.propTypes = {\n    children: PropTypes.string,\n    type: PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Text = ({ children, align, className }) => {\n    return (\n        <p className={`text${align ? ` text--${align}` : ''}${className ? ` ${className}` : ''}`}>\n            {children}\n        </p>\n    );\n};\n\nText.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string, PropTypes.number]),\n    align: PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport default Text;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Container from './../Container';\nimport { Title, Text } from './../Typography/';\n\nconst Alert = ({ title, text }) => {\n\treturn (\n\t\t<Container>\n\t\t\t<Title type=\"h1\">{title}</Title>\n\t\t\t<Text align=\"center\">{text}</Text>\n\t\t</Container>\n\t);\n};\n\nAlert.propTypes = {\n\ttitle: PropTypes.string,\n\ttext: PropTypes.string,\n};\n\nexport default Alert;\n","import PropTypes from 'prop-types';\n\nimport React from 'react';\n\nimport './style.scss';\n\nconst Wrapper = ({ children }) => {\n\treturn (\n\t\t<div className=\"wrapper\">{children}</div>\n\t);\n};\n\nWrapper.propTypes = {\n\tchildren: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n};\n\nexport default Wrapper;\n","import React from 'react';\n\nimport Wrapper from './../Wrapper';\n\nimport './style.scss';\n\nconst Loader = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<div className=\"loader\">\n\t\t\t\t<div className=\"loader__wrapper\">\n\t\t\t\t\t<div className=\"loader__spinner\"></div>\n\t\t\t\t\t<div className=\"loader__label\">\n\t\t\t\t\t\tLoading...\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Loader;\n","import React from 'react';\n\nconst Arrow = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 492 492\"\n    >\n      <g>\n        <g>\n          <path\n            d=\"M464.344,207.418l0.768,0.168H135.888l103.496-103.724c5.068-5.064,7.848-11.924,7.848-19.124\n            c0-7.2-2.78-14.012-7.848-19.088L223.28,49.538c-5.064-5.064-11.812-7.864-19.008-7.864c-7.2,0-13.952,2.78-19.016,7.844\n            L7.844,226.914C2.76,231.998-0.02,238.77,0,245.974c-0.02,7.244,2.76,14.02,7.844,19.096l177.412,177.412\n            c5.064,5.06,11.812,7.844,19.016,7.844c7.196,0,13.944-2.788,19.008-7.844l16.104-16.112c5.068-5.056,7.848-11.808,7.848-19.008\n            c0-7.196-2.78-13.592-7.848-18.652L134.72,284.406h329.992c14.828,0,27.288-12.78,27.288-27.6v-22.788\n            C492,219.198,479.172,207.418,464.344,207.418z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\n\nconst Clear = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          d=\"m502.037 235.209-35.174-28.271c-19.68-15.818-29.799-40.248-27.068-65.348l4.881-44.862c.878-8.076-1.912-16.002-7.656-21.747-5.744-5.744-13.667-8.534-21.747-7.657l-44.862 4.881c-25.1 2.729-49.531-7.389-65.349-27.069l-28.271-35.173c-5.089-6.331-12.667-9.963-20.791-9.963s-15.702 3.632-20.791 9.963l-11.146 13.868c-2.595 3.229-2.082 7.95 1.147 10.544 3.229 2.596 7.949 2.081 10.544-1.147l11.146-13.867c2.228-2.772 5.544-4.361 9.1-4.361s6.872 1.589 9.1 4.361l28.271 35.173c19.041 23.69 48.448 35.868 78.662 32.583l44.862-4.881c3.536-.381 7.004.837 9.518 3.351s3.735 5.983 3.351 9.518l-4.881 44.862c-3.287 30.215 8.894 59.622 32.583 78.662l35.174 28.271c2.771 2.228 4.361 5.544 4.361 9.1s-1.589 6.872-4.361 9.1l-35.173 28.271c-23.689 19.041-35.871 48.447-32.583 78.664l.487 4.47c.418 3.842 3.668 6.688 7.447 6.688.271 0 .545-.015.821-.044 4.118-.449 7.092-4.15 6.644-8.268l-.487-4.469c-2.731-25.102 7.388-49.531 27.069-65.349l35.173-28.271c6.33-5.09 9.962-12.668 9.962-20.792s-3.632-15.702-9.963-20.791z\"/><path d=\"m444.089 409.881c-.448-4.118-4.15-7.086-8.268-6.645-4.118.448-7.093 4.15-6.645 8.268l.587 5.391c.385 3.535-.837 7.004-3.351 9.518s-5.982 3.736-9.518 3.351l-44.862-4.881c-30.215-3.292-59.622 8.894-78.663 32.583l-28.269 35.173c-2.228 2.771-5.544 4.361-9.1 4.361s-6.872-1.589-9.1-4.361l-28.271-35.173c-19.041-23.69-48.452-35.87-78.663-32.583l-44.862 4.881c-3.536.388-7.003-.837-9.518-3.351-2.514-2.514-3.735-5.983-3.351-9.518l4.881-44.863c3.287-30.215-8.894-59.622-32.583-78.662l-35.172-28.27c-2.772-2.228-4.361-5.544-4.361-9.1s1.589-6.872 4.361-9.1l35.173-28.271c23.689-19.041 35.871-48.447 32.583-78.662l-4.881-44.862c-.385-3.535.837-7.004 3.351-9.518 2.515-2.514 5.986-3.733 9.518-3.351l44.863 4.881c26.904 2.926 53.282-6.389 72.372-25.557 2.923-2.935 2.914-7.684-.021-10.606-2.935-2.923-7.683-2.914-10.606.021-15.858 15.923-37.768 23.662-60.122 21.229l-44.862-4.881c-8.079-.877-16.003 1.913-21.747 7.657-5.744 5.745-8.534 13.671-7.656 21.747l4.881 44.861c2.73 25.101-7.388 49.531-27.069 65.349l-35.175 28.272c-6.331 5.089-9.963 12.667-9.963 20.791s3.632 15.702 9.963 20.791l35.174 28.271c19.68 15.818 29.799 40.248 27.068 65.349l-4.881 44.862c-.878 8.076 1.912 16.002 7.656 21.747 5.744 5.744 13.667 8.534 21.747 7.656l44.862-4.881c25.102-2.732 49.531 7.388 65.349 27.068l28.271 35.173c5.089 6.332 12.667 9.964 20.791 9.964s15.702-3.632 20.791-9.963l28.271-35.173c15.818-19.681 40.243-29.803 65.349-27.068l44.862 4.881c8.072.877 16.002-1.912 21.747-7.656 5.744-5.745 8.535-13.671 7.656-21.747z\"/><path d=\"m97.621 256c0 87.331 71.049 158.38 158.379 158.38s158.379-71.049 158.379-158.38-71.049-158.379-158.379-158.379-158.379 71.048-158.379 158.379zm158.379-143.379c79.06 0 143.379 64.32 143.379 143.379 0 79.06-64.32 143.38-143.379 143.38s-143.379-64.32-143.379-143.38 64.319-143.379 143.379-143.379z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Clear;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Clouds = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"m476.76 233.939h-1.884c-1.146-3.885-2.622-7.677-4.41-11.328-1.822-3.72-6.316-5.258-10.034-3.438-3.72 1.822-5.259 6.314-3.438 10.034 2.139 4.368 3.712 8.986 4.676 13.726.711 3.495 3.784 6.005 7.35 6.005h7.74c11.161 0 20.24 9.071 20.24 20.22 0 5.406-2.104 10.487-5.923 14.307-3.826 3.826-8.911 5.933-14.317 5.933h-84.117c-6.45-18.965-17.165-36.419-31.684-51.179-2.553-2.596-5.196-5.069-7.913-7.43 9.217-20.386 29.661-33.771 52.344-33.771 11.143 0 21.94 3.188 31.225 9.219 3.473 2.257 8.119 1.271 10.375-2.204 2.256-3.473 1.27-8.119-2.204-10.375-11.723-7.615-25.345-11.64-39.396-11.64-27.395 0-52.196 15.488-64.457 39.383-14.141-9.731-29.907-16.599-46.58-20.31.056-.978.055-1.962-.049-2.944-.514-4.873-2.904-9.248-6.727-12.316l-19.77-15.89c-10.193-8.193-15.432-20.835-14.013-33.825l2.739-25.222c.606-5.527-1.301-10.956-5.231-14.893-3.936-3.942-9.368-5.863-14.917-5.26l-25.217 2.75c-12.996 1.41-25.638-3.828-33.823-14.011l-15.898-19.79c-3.49-4.33-8.683-6.813-14.245-6.813-5.563 0-10.754 2.484-14.251 6.823l-15.885 19.774c-3.857 4.792-8.881 8.626-14.528 11.09-3.796 1.656-5.531 6.077-3.875 9.873s6.076 5.534 9.874 3.875c7.854-3.427 14.844-8.763 20.218-15.437l15.882-19.771c.86-1.067 1.977-1.227 2.565-1.227s1.706.16 2.558 1.217l15.892 19.782c11.409 14.194 29.026 21.497 47.139 19.527l25.212-2.749c1.365-.147 2.268.529 2.684.946.413.414 1.084 1.31.935 2.668l-2.739 25.225c-1.978 18.101 5.322 35.723 19.527 47.14l19.774 15.894c.417.335.692.709.876 1.075-4.29-.445-8.623-.689-12.988-.722-11.282-.091-22.376 1.214-33.084 3.82.893-48.248-38.089-87.442-85.79-87.442-47.321 0-85.82 38.499-85.82 85.821 0 44.476 34.011 81.151 77.389 85.402-3.492 9.373-5.944 19.157-7.275 29.208l-2.739-3.408c-11.413-14.199-29.034-21.499-47.136-19.518l-25.227 2.741c-1.358.151-2.256-.524-2.672-.938-.416-.416-1.092-1.317-.946-2.674l2.75-25.223c1.966-18.106-5.334-35.727-19.526-47.134l-19.774-15.905c-1.063-.853-1.222-1.964-1.222-2.55 0-.587.159-1.698 1.226-2.555l19.771-15.89c14.193-11.409 21.493-29.029 19.527-47.138l-2.75-25.225c-.147-1.355.528-2.254.943-2.67.417-.417 1.327-1.095 2.677-.947l13.76 1.5c4.124.449 7.82-2.525 8.269-6.643s-2.525-7.82-6.644-8.269l-13.768-1.5c-5.533-.598-10.967 1.317-14.903 5.254-3.934 3.935-5.847 9.361-5.248 14.895l2.75 25.227c1.411 12.993-3.828 25.638-14.013 33.825l-19.764 15.886c-4.343 3.485-6.833 8.679-6.833 14.25 0 5.57 2.49 10.764 6.827 14.244l19.772 15.901c10.185 8.187 15.423 20.832 14.013 33.822l-2.75 25.227c-.599 5.538 1.318 10.971 5.259 14.906 3.938 3.933 9.371 5.843 14.897 5.236l25.225-2.741c12.989-1.417 25.632 3.816 33.819 14.002l2.831 3.524h-20.718c-37.197 0-67.459 30.263-67.459 67.461 0 37.197 30.262 67.459 67.459 67.459h262.305c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-262.305c-28.926 0-52.459-23.533-52.459-52.459s23.533-52.461 52.46-52.461h34.349c6.231-.001 11.628-4.886 11.886-11.427.636-16.086 4.451-31.607 11.097-45.832.177-.322.338-.653.466-1.001 6.174-12.9 14.694-24.708 25.312-34.866 22.208-21.245 51.754-33.447 83.673-33.194 31.777.238 61.757 12.935 84.306 35.858 41.16 41.841 45.137 104.951 13.947 150.947-2.325 3.429-1.43 8.092 1.999 10.417 3.45 2.34 8.107 1.408 10.417-1.999 4.234-6.244 7.937-12.86 11.063-19.717h45.289c7.444 0 14.442 2.899 19.707 8.164 5.472 5.473 8.368 12.754 8.152 20.504-.415 14.924-13.169 27.065-28.432 27.065h-35.927c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h35.927c23.307 0 42.788-18.684 43.426-41.648.331-11.914-4.123-23.11-12.54-31.528-8.098-8.098-18.863-12.557-30.313-12.557h-39.501c6.971-21.957 8.226-46.005 3.31-68.988h79.971c9.413 0 18.264-3.667 24.923-10.327 6.653-6.653 10.317-15.5 10.317-24.914 0-19.419-15.809-35.219-35.24-35.219zm-304.843 1.297c-10.947 10.472-19.908 22.506-26.677 35.614-38.146-1.044-68.862-32.377-68.862-70.771 0-39.051 31.77-70.821 70.82-70.821s70.82 31.77 70.82 70.821c0 2.116-.104 4.226-.287 6.316-16.876 6.323-32.446 16.053-45.814 28.841z\"\n      />\n    </svg>\n  );\n};\n\nexport default Clouds;\n","import React from 'react';\n\nconst Fog = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          d=\"m469.493 54.09h-2.204c-9.241-31.683-38.658-54.09-72.166-54.09-23.575 0-45.819 11.248-59.92 29.826-9.538-7.485-20.07-13.757-31.358-18.591-19.346-8.316-34.237-10.455-54.95-11.235-40.667.006-79.212 17.6-105.88 48.372-2.712 3.131-2.374 7.867.756 10.58 3.131 2.713 7.868 2.374 10.58-.756 23.925-27.608 58.507-43.361 95.048-43.19 34.615.14 65.74 14.294 88.52 37.452 15.999 16.265 27.318 36.356 32.614 58.541 7.947 33.211 2.112 69.392-18.047 99.124-2.325 3.429-1.43 8.092 1.999 10.417 3.414 2.314 8.081 1.445 10.417-1.999 4.44-6.548 8.317-13.488 11.584-20.68h47.388c16.417 0 29.803 13.493 29.34 30.19-.437 15.718-13.867 28.504-29.937 28.504h-60.799c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h60.799c24.114 0 44.271-19.328 44.931-43.087.698-25.145-19.457-45.607-44.334-45.607h-41.586c3.753-11.7 5.971-24.061 6.516-36.503.261-5.94.16-12.697-.477-19.488h81.167c20.116 0 36.39-16.272 36.39-36.39-.002-20.065-16.326-36.39-36.391-36.39zm0 57.78h-83.395c-5.593-27.277-19.368-52.462-39.583-72.138 11.248-15.385 29.378-24.732 48.608-24.732 28.488 0 53.28 20.223 58.95 48.085.711 3.494 3.784 6.005 7.35 6.005h8.07c11.794 0 21.39 9.596 21.39 21.391-.001 11.824-9.563 21.389-21.39 21.389z\"/><path d=\"m111.262 340.993-36.54-36.541c-2.929-2.928-7.678-2.928-10.606 0-2.929 2.93-2.929 7.678 0 10.607l32.504 32.504c-23.551 12.092-43.93 30.286-58.863 53.371-2.433 3.763-2.433 8.625.001 12.389 39.884 61.657 117.026 86.066 184.561 59.94l36.54 36.541c1.464 1.464 3.384 2.196 5.303 2.196s3.839-.732 5.303-2.196c2.929-2.93 2.929-7.678 0-10.607l-32.504-32.504c23.551-12.092 43.93-30.285 58.862-53.368 2.435-3.764 2.435-8.628 0-12.391-40.68-62.889-118.35-85.555-184.561-59.941zm86.744 8.206c21.365 11.532 34.603 33.641 34.603 57.93 0 15.182-5.176 29.511-14.27 40.941l-15.376-15.376c5.125-7.23 8.15-16.049 8.15-25.566 0-24.439-19.883-44.323-44.323-44.323-9.517 0-18.336 3.025-25.566 8.151l-15.362-15.362c3.01-2.385 6.254-4.528 9.712-6.394 20.543-4.721 41.855-4.729 62.432-.001zm-56.554 43.198 40.069 40.069c-4.332 2.529-9.363 3.985-14.731 3.985-16.169 0-29.323-13.154-29.323-29.323 0-5.368 1.457-10.399 3.985-14.731zm10.607-10.607c4.332-2.529 9.364-3.985 14.731-3.985 16.168 0 29.323 13.154 29.323 29.323 0 5.368-1.456 10.399-3.985 14.731zm-100.421 25.338c12.322-18.377 28.523-33.195 47.13-43.681-8.214 12.78-12.796 27.853-12.796 43.682 0 15.828 4.581 30.899 12.795 43.679-18.607-10.486-34.808-25.304-47.129-43.68zm83.937 57.929c-21.364-11.531-34.602-33.639-34.602-57.928 0-15.183 5.175-29.512 14.27-40.942l15.376 15.376c-5.125 7.23-8.15 16.049-8.15 25.566 0 24.439 19.883 44.323 44.323 44.323 9.517 0 18.335-3.025 25.565-8.15l15.362 15.362c-3.01 2.385-6.255 4.528-9.713 6.395-20.544 4.718-41.854 4.726-62.431-.002zm99.239-14.249c8.214-12.78 12.795-27.851 12.795-43.679 0-15.83-4.582-30.902-12.797-43.682 18.608 10.486 34.808 25.304 47.13 43.681-12.321 18.377-28.521 33.195-47.128 43.68z\"/><path d=\"m460.724 304.512h-225.76c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h225.759c4.142 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.499-7.5z\"/><path d=\"m460.724 352.07h-162.106c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h162.105c4.142 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.499-7.5z\"/><path d=\"m460.724 399.628h-125.146c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h125.146c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5z\"/><path d=\"m327.476 271.556c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5h-251.388c-30.311 0-54.97-24.659-54.97-54.97s24.66-54.972 54.971-54.972h35.788c6.51-.003 11.812-5.101 12.069-11.604.673-17.028 4.712-33.419 12.006-48.715 1.783-3.739.197-8.216-3.542-9.998-3.739-1.784-8.215-.196-9.998 3.541-7.773 16.301-12.248 33.708-13.317 51.776h-33.007c-38.582 0-69.97 31.391-69.97 69.972s31.389 69.97 69.97 69.97z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Fog;\n","import React from 'react';\n\nconst Humidity = () => {\n  return (\n    <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 511.448 511.448\"\n    >\n        <g>\n            <g>\n                <circle\n                    cx=\"303.724\"\n                    cy=\"399.448\"\n                    r=\"16\"\n                />\n            </g>\n        </g>\n        <g>\n            <g>\n                <circle\n                    cx=\"207.724\"\n                    cy=\"239.448\"\n                    r=\"16\"\n                />\n            </g>\n        </g>\n        <g>\n            <g>\n                <path\n                    d=\"M344.556,112.216C318.38,78.84,291.34,44.344,269.516,7.32c-5.76-9.76-21.824-9.76-27.552,0\n                    c-21.856,37.024-48.896,71.52-75.072,104.896c-53.056,67.68-103.168,131.616-103.168,207.232c0,105.888,86.112,192,192,192\n                    s192-86.112,192-192C447.724,243.832,397.612,179.896,344.556,112.216z M207.724,191.448c26.464,0,48,21.536,48,48\n                    s-21.536,48-48,48s-48-21.536-48-48S181.26,191.448,207.724,191.448z M187.052,410.776c-3.136,3.104-7.232,4.672-11.328,4.672\n                    s-8.192-1.568-11.328-4.672c-6.24-6.24-6.24-16.384,0-22.624l160-160c6.24-6.24,16.384-6.24,22.624,0\n                    c6.24,6.24,6.272,16.384,0.032,22.624L187.052,410.776z M303.724,447.448c-26.464,0-48-21.536-48-48s21.536-48,48-48\n                    s48,21.536,48,48S330.188,447.448,303.724,447.448z\"\n                />\n            </g>\n        </g>\n    </svg>\n  );\n};\n\nexport default Humidity;\n","import React from 'react';\n\nconst Mist = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          d=\"m454.04 193.966h-44.737c8.416-25.843 9.675-54.557 2.77-81.985h56.008c8.696 0 16.869-3.383 23.019-9.532 6.146-6.16 9.531-14.335 9.531-23.019 0-17.942-14.602-32.54-32.55-32.54h-1.169c-8.362-27.507-34.06-46.89-63.302-46.89-20.42 0-39.758 9.619-52.2 25.54-24.017-16.393-52.256-25.314-81.835-25.536-.385-.003-.768-.004-1.153-.004-40.323 0-77.973 15.887-106.124 44.809-2.889 2.969-2.825 7.717.144 10.605 2.967 2.89 7.715 2.825 10.605-.143 25.302-25.995 59.136-40.271 95.379-40.271 35.217 0 69.078 13.756 94.764 39.869 25.892 26.32 39.719 61.474 38.23 98.702-.606 15.104-3.731 30.262-9.798 45.048-3.458 8.417-7.807 16.514-12.927 24.065-2.325 3.428-1.43 8.092 1.998 10.416 3.457 2.345 8.112 1.401 10.417-1.998 4.749-7.002 8.891-14.432 12.372-22.136h50.558c8.437 0 16.37 3.286 22.337 9.254 6.202 6.202 9.484 14.455 9.24 23.239-.471 16.916-14.92 30.678-32.21 30.678h-368.272c-32.403 0-58.765-26.361-58.765-58.764s26.362-58.766 58.766-58.766h37.958c6.662 0 12.086-5.216 12.35-11.872.846-21.39 6.917-42.465 17.557-60.946 2.066-3.59.832-8.176-2.758-10.242-3.59-2.067-8.175-.832-10.242 2.758-11.424 19.844-18.117 42.372-19.422 65.302h-35.444c-40.674 0-73.765 33.092-73.765 73.766s33.091 73.764 73.765 73.764h368.272c25.334 0 46.51-20.304 47.204-45.261.36-12.948-4.48-25.116-13.628-34.264-8.8-8.799-20.5-13.646-32.943-13.646zm-90.698-159.364c9.648-12.377 24.278-19.602 40.268-19.602 24.226 0 45.304 17.194 50.12 40.884.71 3.495 3.783 6.006 7.35 6.006h7c9.677 0 17.55 7.868 17.55 17.54 0 4.684-1.829 9.096-5.144 12.417-3.311 3.311-7.717 5.134-12.407 5.134h-60.653c-7.191-19.445-18.513-37.351-33.543-52.631-3.38-3.438-6.9-6.686-10.541-9.748z\"/><path d=\"m427.861 376.328c-4.229 0-17.681-5.809-24.928-8.938-15.293-6.605-29.738-12.844-43.825-12.844-14.082 0-28.52 6.235-43.84 12.852-7.225 3.121-20.674 8.93-24.903 8.93s-17.681-5.81-24.939-8.944c-15.286-6.602-29.725-12.837-43.807-12.837-14.083 0-28.521 6.235-43.841 12.853-7.225 3.12-20.672 8.929-24.9 8.929-4.227 0-17.673-5.808-24.935-8.943-15.286-6.603-29.724-12.838-43.806-12.838-13.143 0-23.835 10.692-23.835 23.836 0 13.143 10.692 23.835 23.835 23.835 4.231 0 17.689 5.813 24.927 8.94 15.289 6.603 29.729 12.84 43.814 12.84s28.526-6.237 43.823-12.844c7.23-3.123 20.688-8.937 24.919-8.937 4.234 0 17.691 5.813 24.931 8.941 15.289 6.603 29.73 12.839 43.814 12.839 14.085 0 28.527-6.237 43.823-12.844 7.229-3.123 20.686-8.937 24.919-8.937 4.235 0 17.694 5.813 24.926 8.938 15.292 6.604 29.737 12.843 43.827 12.843 13.143 0 23.835-10.692 23.835-23.835s-10.691-23.835-23.834-23.835zm0 32.67c-10.989 0-24.051-5.642-37.879-11.613-13.782-5.953-24.064-10.167-30.874-10.167-6.809 0-17.089 4.214-30.874 10.169-13.826 5.972-26.885 11.611-37.869 11.611s-24.042-5.64-37.876-11.613c-13.78-5.953-24.06-10.167-30.87-10.167-6.807 0-17.087 4.214-30.875 10.17-13.825 5.971-26.883 11.61-37.867 11.61s-24.042-5.64-37.874-11.613c-13.78-5.953-24.06-10.167-30.867-10.167-4.872 0-8.835-3.964-8.835-8.835 0-4.872 3.963-8.836 8.835-8.836 10.982 0 24.037 5.639 37.896 11.624 13.77 5.947 24.042 10.157 30.844 10.157 6.803 0 17.077-4.21 30.883-10.173 13.822-5.97 26.876-11.608 37.858-11.608 10.981 0 24.037 5.639 37.891 11.621 13.774 5.949 24.05 10.16 30.854 10.16s17.078-4.211 30.884-10.174c13.822-5.969 26.877-11.607 37.858-11.607 10.986 0 24.048 5.642 37.899 11.623 13.774 5.948 24.049 10.158 30.854 10.158 4.872 0 8.835 3.963 8.835 8.835s-3.959 8.835-8.831 8.835z\"/><path d=\"m427.861 464.329c-4.232 0-17.689-5.811-24.926-8.936-15.292-6.605-29.735-12.845-43.827-12.845-14.087 0-28.53 6.238-43.828 12.847-7.229 3.122-20.684 8.934-24.915 8.934s-17.689-5.813-24.923-8.937c-15.292-6.605-29.736-12.844-43.822-12.844-14.087 0-28.53 6.239-43.83 12.848-7.228 3.122-20.682 8.933-24.912 8.933-4.229 0-17.682-5.81-24.919-8.936-15.292-6.605-29.734-12.845-43.822-12.845-13.143 0-23.835 10.692-23.835 23.836 0 13.143 10.692 23.835 23.835 23.835 4.229 0 17.682 5.81 24.919 8.936 15.293 6.606 29.736 12.845 43.823 12.845s28.531-6.239 43.833-12.849c7.227-3.122 20.68-8.932 24.909-8.932 4.231 0 17.689 5.813 24.923 8.937 15.292 6.606 29.735 12.844 43.822 12.844s28.531-6.239 43.825-12.846c7.229-3.122 20.686-8.935 24.917-8.935 1.271 0 4.953.632 15.315 4.862 3.833 1.563 8.213-.274 9.778-4.108 1.566-3.835-.274-8.213-4.108-9.778-10.259-4.188-16.535-5.976-20.985-5.976-6.806 0-17.086 4.213-30.868 10.166-13.827 5.973-26.888 11.615-37.874 11.615s-24.047-5.642-37.88-11.616c-13.779-5.951-24.059-10.164-30.866-10.164-6.804 0-17.081 4.211-30.867 10.166-13.827 5.972-26.888 11.614-37.874 11.614s-24.046-5.642-37.885-11.619c-13.775-5.95-24.052-10.161-30.856-10.161-4.872 0-8.835-3.964-8.835-8.835 0-4.872 3.963-8.836 8.835-8.836 10.986 0 24.046 5.642 37.885 11.619 13.775 5.95 24.052 10.161 30.856 10.161 6.805 0 17.083-4.212 30.868-10.166 13.827-5.973 26.888-11.614 37.874-11.614s24.047 5.642 37.88 11.616c13.779 5.951 24.059 10.164 30.866 10.164 6.806 0 17.084-4.212 30.869-10.166 13.828-5.973 26.888-11.614 37.874-11.614 10.991 0 24.051 5.642 37.888 11.618 13.779 5.95 24.059 10.162 30.865 10.162 4.872 0 8.835 3.964 8.835 8.836s-3.965 8.835-8.837 8.835c-4.501 0-9.696-.952-15.879-2.911-3.948-1.253-8.164.937-9.415 4.884-1.251 3.949.936 8.164 4.885 9.415 7.671 2.431 14.347 3.612 20.41 3.612 13.143 0 23.835-10.692 23.835-23.835 0-13.144-10.693-23.836-23.836-23.836z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Mist;\n","import React from 'react';\n\nconst Placeholder = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 511.998 511.998\"\n    >\n      <g>\n        <g>\n          <path\n            d=\"M407.783,62.871C367.241,22.328,313.335,0,256.001,0c-57.335,0-111.239,22.327-151.784,62.871\n            c-40.542,40.542-62.87,94.444-62.87,151.779c0,57.335,22.328,111.239,62.87,151.782l141.178,141.173\n            c2.929,2.93,6.768,4.393,10.606,4.393c3.839,0,7.678-1.465,10.606-4.393L407.78,366.433\n            c40.543-40.543,62.87-94.447,62.871-151.782C470.65,157.314,448.324,103.412,407.783,62.871z M323.413,282.06\n            c-18.006,18.006-41.946,27.923-67.411,27.923c-25.465,0-49.405-9.916-67.41-27.922c-18.007-18.006-27.923-41.946-27.923-67.411\n            c0-25.464,9.916-49.404,27.923-67.411c18.005-18.006,41.945-27.922,67.41-27.922c25.465,0,49.405,9.916,67.411,27.922\n            c18.006,18.005,27.923,41.945,27.923,67.41C351.335,240.114,341.418,264.055,323.413,282.06z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default Placeholder;\n","import React from 'react';\n\nconst Rain = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          d=\"m474.87 87.89h-2.398c-9.404-32.473-39.525-55.45-73.842-55.45-29.289 0-55.749 16.654-68.654 42.313-23.453-16.28-51.138-25.155-80.16-25.373-40.33-.286-79.174 16.532-106.53 46.189-2.809 3.045-2.617 7.79.427 10.598 3.045 2.809 7.79 2.617 10.598-.427 24.497-26.556 59.254-41.653 95.392-41.36 80.314.603 140.605 74.773 124.939 153.589-3.377 16.973-10.124 32.819-19.569 46.749-2.324 3.428-1.429 8.092 1.999 10.417 3.415 2.313 8.082 1.445 10.417-2 4.568-6.738 8.556-13.881 11.91-21.285h48.705c8.247 0 15.957 3.258 21.711 9.174 5.749 5.91 8.788 13.714 8.559 21.973-.451 16.215-14.304 29.407-30.881 29.407h-59.752c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h59.752c24.621 0 45.2-19.734 45.875-43.99.343-12.344-4.202-24.01-12.8-32.849-8.603-8.845-20.132-13.716-32.464-13.716h-42.894c7.626-23.614 9.072-49.685 3.603-74.711h86.057c20.474 0 37.13-16.656 37.13-37.13 0-20.466-16.656-37.118-37.13-37.118zm0 59.25h-90.218c-6.852-20.32-18.298-39.022-33.841-54.823-2.807-2.853-5.715-5.566-8.707-8.153 9.843-22.161 31.949-36.724 56.527-36.724 29.295 0 54.789 20.795 60.62 49.445.711 3.494 3.784 6.004 7.35 6.004h8.271c12.202 0 22.13 9.923 22.13 22.12-.002 12.203-9.93 22.131-22.132 22.131z\"/><path d=\"m340.241 319.905c0-4.142-3.357-7.5-7.5-7.5h-261.195c-31.179 0-56.546-25.366-56.546-56.545 0-31.18 25.367-56.549 56.547-56.549h36.69c6.573-.001 11.926-5.148 12.186-11.715.767-19.398 5.751-37.888 14.814-54.956 1.942-3.658.552-8.199-3.106-10.142-3.658-1.942-8.199-.551-10.142 3.106-9.708 18.282-15.228 38.019-16.424 58.706h-34.019c-39.45.002-71.546 32.099-71.546 71.55 0 39.45 32.096 71.545 71.546 71.545h261.195c4.143 0 7.5-3.358 7.5-7.5z\"/><path d=\"m256 400.89c-9.526 0-31.46 25.888-31.46 47.21 0 17.347 14.113 31.46 31.46 31.46s31.46-14.113 31.46-31.46c0-21.492-22.027-47.21-31.46-47.21zm0 63.67c-9.076 0-16.46-7.384-16.46-16.46 0-11.968 11.006-26.015 16.46-30.98 5.454 4.965 16.46 19.013 16.46 30.98 0 9.076-7.384 16.46-16.46 16.46z\"/><path d=\"m348.721 352.578c-9.437 0-31.46 25.765-31.46 47.211 0 17.347 14.113 31.46 31.46 31.46s31.46-14.113 31.46-31.46c0-21.493-22.027-47.211-31.46-47.211zm0 63.671c-9.076 0-16.46-7.384-16.46-16.46 0-11.968 11.007-26.016 16.46-30.981 5.454 4.965 16.46 19.013 16.46 30.981 0 9.076-7.384 16.46-16.46 16.46z\"/><path d=\"m163.279 352.578c-9.526 0-31.46 25.889-31.46 47.211 0 17.347 14.113 31.46 31.46 31.46s31.46-14.113 31.46-31.46c0-21.493-22.027-47.211-31.46-47.211zm0 63.671c-9.076 0-16.46-7.384-16.46-16.46 0-11.968 11.006-26.016 16.46-30.981 5.454 4.965 16.46 19.013 16.46 30.981 0 9.076-7.384 16.46-16.46 16.46z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Rain;\n","import React from 'react';\n\nconst Search = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 56.966 56.966\"\n    >\n      <path\n        d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23\n        s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92\n        c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17\n        s-17-7.626-17-17S14.61,6,23.984,6z\"\n      />\n    </svg>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nconst Snow = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"m468.324 335.738c-.81-3.021-2.746-5.545-5.453-7.108-2.708-1.563-5.861-1.977-8.882-1.169 0 0-40.051 10.755-40.373 10.873l-23.243-13.417 67.149-20.507c3.962-1.21 6.193-5.402 4.983-9.363-1.211-3.962-5.404-6.193-9.363-4.983l-80.538 24.596-22.716-13.113 14.855-8.379c3.608-2.035 4.883-6.61 2.848-10.217-2.034-3.608-6.611-4.883-10.217-2.848l-22.575 12.734-12.38-7.146v-59.381l12.38-7.146 22.575 12.734c3.607 2.036 8.183.759 10.217-2.848 2.035-3.608.761-8.182-2.848-10.217l-14.855-8.379 22.716-13.113 80.538 24.596c3.937 1.204 8.147-.998 9.363-4.983 1.21-3.962-1.021-8.154-4.983-9.363l-67.149-20.507 23.243-13.417c1.087.397-1.469-.363 40.373 10.873 6.247 1.672 12.66-2.024 14.334-8.276l10.553-39.383c.81-3.02.396-6.175-1.168-8.883-1.564-2.707-4.087-4.644-7.106-5.453l-39.385-10.553c-3.019-.81-6.175-.396-8.882 1.169-2.707 1.563-4.644 4.087-5.452 7.106-11.193 41.859-10.578 39.284-10.774 40.413l-23.24 13.415 15.817-68.412c.933-4.036-1.583-8.064-5.618-8.997-4.03-.929-8.064 1.582-8.997 5.618l-18.969 82.048-22.712 13.111.171-17.051c.041-4.142-3.283-7.533-7.425-7.575-.025 0-.051 0-.077 0-4.107 0-7.456 3.309-7.498 7.425l-.26 25.911-12.386 7.15-51.415-29.685v-14.298l22.312-13.181c3.566-2.107 4.75-6.706 2.643-10.273-2.107-3.566-6.705-4.748-10.272-2.643l-14.683 8.674v-26.227l61.57-57.45c3.029-2.826 3.193-7.572.367-10.6-2.824-3.028-7.57-3.193-10.6-.367l-51.337 47.901v-26.833c.267-.223.528-.455.776-.704l28.832-28.832c2.21-2.21 3.428-5.15 3.428-8.276s-1.218-6.065-3.428-8.276l-28.832-28.832c-4.563-4.562-11.989-4.561-16.552 0l-28.832 28.833c-2.21 2.21-3.428 5.15-3.428 8.276s1.218 6.065 3.428 8.276c0 0 29.341 29.312 29.608 29.536v26.833l-51.337-47.901c-3.029-2.827-7.776-2.662-10.6.367-2.826 3.028-2.662 7.775.367 10.6l61.57 57.45v26.227l-14.683-8.674c-3.566-2.106-8.164-.923-10.272 2.643-2.107 3.566-.924 8.166 2.643 10.273l22.312 13.181v14.298l-12.629 7.292c-3.587 2.071-4.817 6.658-2.745 10.245 2.072 3.588 6.661 4.817 10.245 2.745l12.629-7.293 51.417 29.686v59.371l-51.417 29.687-51.417-29.686v-59.371l8.229-4.751c3.587-2.071 4.817-6.658 2.745-10.245-2.071-3.587-6.66-4.817-10.245-2.745l-8.225 4.749-12.386-7.149-.26-25.911c-.042-4.116-3.392-7.425-7.498-7.425-.026 0-.052 0-.077 0-4.142.042-7.466 3.433-7.425 7.575l.171 17.051-22.712-13.113-18.969-82.048c-.934-4.036-4.963-6.552-8.997-5.618-4.035.933-6.551 4.961-5.618 8.997l15.817 68.412-23.24-13.415c-.06-.343-.129-.686-.22-1.028l-10.553-39.384c-.81-3.021-2.746-5.545-5.453-7.108-2.709-1.564-5.86-1.978-8.881-1.169l-39.387 10.553c-3.019.809-5.542 2.746-7.106 5.453-1.564 2.708-1.978 5.863-1.169 8.879l.415 1.551c1.07 4.001 5.181 6.377 9.185 5.306 3.44-.921 5.679-4.089 5.558-7.503l33.202-8.896 8.847 33.016-33.016 8.846-.224-.836c-1.072-4.001-5.191-6.374-9.186-5.304-4.001 1.072-6.376 5.184-5.305 9.185l1.077 4.021c.81 3.021 2.746 5.545 5.453 7.108 1.804 1.041 3.805 1.573 5.833 1.573 1.017 0 2.04-.134 3.049-.404 0 0 40.051-10.755 40.373-10.873l23.243 13.417-67.149 20.508c-3.962 1.21-6.193 5.402-4.983 9.363.987 3.232 3.958 5.312 7.17 5.312.726 0 1.464-.106 2.193-.329l80.537-24.596 22.716 13.113-14.855 8.379c-3.608 2.035-4.883 6.61-2.848 10.217 1.378 2.443 3.921 3.817 6.539 3.817 1.248 0 2.514-.312 3.678-.969l22.575-12.734 12.38 7.146v59.381l-12.38 7.146-22.575-12.734c-3.606-2.035-8.182-.76-10.217 2.848s-.761 8.182 2.848 10.217l14.855 8.379-22.716 13.113-80.536-24.595c-3.959-1.211-8.154 1.021-9.363 4.983-1.21 3.962 1.021 8.154 4.983 9.363l67.149 20.507-23.243 13.417c-.323-.118-.65-.229-.989-.32l-39.385-10.553c-3.022-.809-6.175-.394-8.882 1.169s-4.644 4.088-5.452 7.107l-10.554 39.383c-.81 3.02-.396 6.175 1.168 8.883 1.564 2.707 4.087 4.644 7.106 5.453l39.385 10.553c6.244 1.674 12.66-2.023 14.334-8.275l10.554-39.386c.092-.342.161-.685.22-1.027l23.24-13.415-15.817 68.412c-.933 4.036 1.583 8.064 5.618 8.997 4.053.937 8.068-1.6 8.997-5.618l18.969-82.048 22.712-13.111-.171 17.051c-.041 4.142 3.283 7.533 7.425 7.575h.077c4.107 0 7.456-3.309 7.498-7.425l.26-25.911 12.386-7.15 51.414 29.684v14.298l-22.312 13.181c-3.566 2.107-4.75 6.706-2.643 10.273s6.706 4.748 10.272 2.643l14.683-8.674v26.227l-61.57 57.45c-3.029 2.826-3.193 7.572-.367 10.6 2.825 3.029 7.571 3.194 10.6.367l51.337-47.901v26.833c-.267.223-.528.455-.776.704l-28.832 28.832c-2.21 2.211-3.428 5.15-3.428 8.276s1.218 6.065 3.428 8.276l28.833 28.833c2.282 2.28 5.279 3.42 8.276 3.42s5.995-1.141 8.276-3.421l28.832-28.833c2.21-2.211 3.428-5.15 3.428-8.276s-1.218-6.065-3.428-8.276c0 0-29.341-29.313-29.608-29.536v-26.833l51.337 47.901c3.041 2.838 7.787 2.648 10.6-.367 2.826-3.028 2.662-7.775-.367-10.6l-61.57-57.45v-26.227l14.683 8.674c3.574 2.111 8.169.916 10.272-2.643 2.107-3.566.924-8.166-2.643-10.273l-22.312-13.179v-14.298l51.414-29.684 12.386 7.149.26 25.911c.042 4.116 3.392 7.425 7.498 7.425h.077c4.142-.042 7.466-3.433 7.425-7.575l-.171-17.051 22.712 13.111 18.969 82.048c.802 3.467 3.888 5.813 7.301 5.812.56 0 1.128-.063 1.696-.194 4.035-.933 6.551-4.961 5.618-8.997l-15.817-68.412 23.24 13.415c.06.343.129.686.22 1.028l10.553 39.384c.81 3.021 2.746 5.545 5.453 7.108 1.804 1.042 3.805 1.573 5.833 1.573 2.29 0 3.644-.629 5.92-1.173 4.002-1.071 6.377-5.183 5.306-9.185-1.044-3.898-4.978-6.249-8.874-5.381l-8.849-33.023 33.016-8.846 8.851 33.032c-3.708 1.261-5.851 5.201-4.823 9.039 1.073 4.002 5.183 6.376 9.186 5.304 1.246-.524 6.673-.749 9.808-6.176 1.564-2.708 1.978-5.863 1.168-8.881zm-37.806-208.405 33.016 8.846-8.847 33.016-33.016-8.846zm-198.687-86.803 24.169-24.171 24.169 24.17-24.169 24.171zm-150.349 344.137-33.016-8.846 8.847-33.016 33.016 8.846zm198.688 86.803-24.17 24.171-24.17-24.17 24.17-24.171z\"\n      />\n    </svg>\n  );\n};\n\nexport default Snow;\n","import React from 'react';\n\nconst Thermometer = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 512 512\"\n    >\n      <g>\n        <g>\n          <path\n            d=\"M341.333,288.593V85.333C341.333,38.205,303.128,0,256,0s-85.333,38.205-85.333,85.333v203.259\n            C144.48,312.03,128,346.091,128,384c0,70.693,57.308,128,128,128s128-57.307,128-128C384,346.091,367.52,312.03,341.333,288.593z\n            M256,469.333c-47.128,0-85.333-38.205-85.333-85.333c0-24.637,10.441-47.492,28.455-63.615l14.212-12.72V85.333\n            c0-23.564,19.103-42.667,42.667-42.667s42.667,19.102,42.667,42.667v222.332l14.212,12.72\n            c18.014,16.123,28.455,38.977,28.455,63.615C341.333,431.128,303.128,469.333,256,469.333z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <rect\n            x=\"234.667\"\n            y=\"170.667\"\n            width=\"42.667\"\n            height=\"256\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <circle\n            cx=\"256\"\n            cy=\"384\"\n            r=\"64\"/>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default Thermometer;\n","import React from 'react';\n\nconst Thunderstorm = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"m474.87 62.011h-2.398c-9.404-32.474-39.525-55.45-73.842-55.45-29.288 0-55.747 16.653-68.652 42.311-23.453-16.281-51.138-25.156-80.162-25.374-.366-.002-.731-.004-1.096-.004-43.037 0-83.353 19.021-110.754 52.297-2.633 3.197-2.176 7.924 1.022 10.557 3.198 2.634 7.924 2.175 10.557-1.022 24.747-30.052 61.296-47.114 100.159-46.828 34.625.26 66.612 14.258 90.414 38.455 43.857 44.585 48.646 112.186 14.956 161.883-2.324 3.428-1.429 8.092 1.999 10.417 3.415 2.313 8.082 1.445 10.417-2 4.568-6.739 8.556-13.882 11.911-21.285h48.705c8.088 0 15.692 3.15 21.411 8.87 5.946 5.946 9.093 13.858 8.858 22.278-.451 16.215-14.304 29.407-30.881 29.407h-355.948c-31.18 0-56.546-25.366-56.546-56.546s25.367-56.548 56.547-56.548h36.69c6.573-.001 11.926-5.148 12.186-11.715.67-16.95 4.597-33.308 11.67-48.617 1.737-3.76.097-8.217-3.663-9.954-3.76-1.736-8.216-.097-9.954 3.663-7.529 16.297-11.868 33.651-12.91 51.624h-34.02c-39.45-.002-71.546 32.096-71.546 71.546 0 36.444 27.397 66.589 62.672 70.976l-23.561 66.203c-1.551 4.377-.714 9.132 2.24 12.72 2.948 3.581 7.444 5.315 12.011 4.636l22.35-3.258-19.622 53.269c-1.873 5.095.233 10.665 5.006 13.245 4.784 2.586 10.59 1.276 13.806-3.054l71.11-95.38c3.09-4.145 3.432-9.723.871-14.211-2.559-4.486-7.528-7.032-12.657-6.479l-23.579 2.505 13.792-29.625h67.154l-22.833 58.112c-1.644 4.179-.985 8.792 1.762 12.342 2.748 3.55 7.054 5.343 11.509 4.798l29.173-3.575-29.246 66.128c-1.765 3.992-1.237 8.646 1.375 12.145 2.611 3.497 6.926 5.322 11.25 4.766l25.686-3.298-12.394 38.151c-1.662 5.112.487 10.461 5.224 13.007 4.733 2.546 10.38 1.386 13.726-2.818l67.765-85.106c3.084-3.881 3.463-9.155.966-13.436-2.494-4.277-7.269-6.54-12.148-5.77l-18.177 2.85 4.871-9.636c1.869-3.697.387-8.208-3.31-10.077-3.696-1.868-8.208-.386-10.077 3.31l-8.339 16.498c-1.882 3.721-1.528 8.126.924 11.496 2.454 3.372 6.538 5.061 10.659 4.418l17.977-2.818-48.857 61.359 7.739-23.822c1.102-3.375.409-7.024-1.854-9.762-2.267-2.744-5.732-4.113-9.271-3.666l-27.944 3.588 29.517-66.742c1.7-3.837 1.204-8.319-1.294-11.696-2.501-3.381-6.646-5.171-10.835-4.665l-30.954 3.792 23.526-59.876h40.173l-7.254 15.272c-1.804 3.815-1.455 8.167.932 11.642 2.384 3.471 6.313 5.354 10.511 5.043l31.047-2.294-10.613 21.002c-1.869 3.697-.387 8.208 3.311 10.077 3.705 1.871 8.213.379 10.076-3.311l12.184-24.107c2.113-4.192 1.806-9.219-.803-13.121-2.606-3.899-7.133-6.109-11.797-5.754l-28.863 2.132 7.875-16.581h85.37l-23.359 65.633c-1.551 4.376-.714 9.129 2.237 12.716 2.949 3.583 7.453 5.319 12.023 4.64l22.339-3.257-19.621 53.269c-1.872 5.095.234 10.665 5.008 13.244 4.79 2.589 10.594 1.271 13.806-3.054l71.129-95.392c3.079-4.147 3.413-9.724.85-14.208-2.562-4.481-7.532-7.022-12.653-6.472l-23.579 2.505 13.791-29.625h15.663c24.621 0 45.2-19.734 45.875-43.99.35-12.583-4.354-24.41-13.245-33.301-8.553-8.553-19.924-13.263-32.019-13.263h-42.893c7.563-23.427 9.116-49.486 3.601-74.717h86.059c9.915 0 19.239-3.863 26.254-10.877 7.014-7.012 10.876-16.332 10.876-26.241 0-20.468-16.656-37.119-37.13-37.119zm-379.238 265.852c-1.994 4.279-1.524 9.322 1.225 13.16 2.747 3.836 7.365 5.902 12.036 5.395l22.354-2.375-51.08 68.515 11.773-31.964c1.4-3.766.729-7.879-1.794-11.005-2.526-3.13-6.412-4.658-10.408-4.079l-25.439 3.708 24.092-67.695h29.504zm287.389.001c-1.993 4.279-1.523 9.322 1.226 13.161 2.746 3.835 7.371 5.897 12.035 5.394l22.365-2.376-51.095 68.523 11.777-31.972c1.399-3.766.729-7.88-1.794-11.005-2.526-3.129-6.409-4.655-10.408-4.079l-25.439 3.709 24.092-67.696h29.503zm107.497-213.097c-4.182 4.181-9.738 6.483-15.647 6.483h-90.221c-6.852-20.318-18.297-39.017-33.839-54.816-2.806-2.853-5.714-5.566-8.706-8.152 9.843-22.159 31.949-36.722 56.525-36.722 29.295 0 54.789 20.795 60.62 49.446.711 3.494 3.784 6.004 7.35 6.004h8.271c12.202 0 22.13 9.923 22.13 22.12-.001 5.903-2.304 11.456-6.483 15.637z\"\n      />\n    </svg>\n  );\n};\n\nexport default Thunderstorm;\n","import React from 'react';\n\nconst Tornado = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n\n          d=\"m453.124 222.905c-9.928-52.073-60.033-113.663-130.763-160.733-48.84-32.503-101.249-53.906-147.573-60.268-37.934-5.211-82.528-1.23-103.331 31.063-.187.289-.992 1.596-1.053 1.698-12.675 21.154-10.529 46.774-2.318 70.232-11.86 16.858-15.628 40.688-2.185 70.034-8.213 19.373-5.911 40.63 3.166 60.203-12.168 18.51-15.098 39.394-8.447 60.68 12.967 41.503 62.984 83.432 124.459 104.338 31.48 10.706 56.783 20.107 77.354 28.741 3.821 1.603 8.216-.193 9.818-4.014 1.603-3.819-.194-8.215-4.013-9.819-20.895-8.769-46.517-18.292-78.329-29.111-26.859-9.134-52.949-23.314-73.464-39.927-21.389-17.323-35.742-36.231-41.507-54.683-4.501-14.405-3.575-28.14 2.689-40.979 22.821 34.5 67.011 65.538 121.208 83.102 3.923 1.272 8.165-.867 9.447-4.822 1.277-3.941-.882-8.17-4.823-9.448-55.456-17.972-100.67-51.641-118.94-86.665-.034-.07-.056-.144-.092-.213-6.984-13.477-9.731-26.737-8.141-38.867 15.441 23.335 39.357 46.153 69.58 66.311 7.238 4.826 14.862 9.504 22.661 13.904 3.607 2.035 8.183.76 10.218-2.847 2.035-3.609.761-8.183-2.847-10.218-7.476-4.217-14.78-8.699-21.708-13.319-30.308-20.214-54.639-44.017-68.51-67.027-10.328-17.131-17.386-38.073-10.549-56.765.06-.162.117-.324.179-.485.062-.162.135-.319.199-.481 9.076 18.724 22.477 38.329 39.942 57.906 2.758 3.089 7.5 3.36 10.59.604 3.091-2.758 3.361-7.499.604-10.59-80.187-89.882-63.448-168.716 46.102-153.675 44.126 6.06 94.309 26.62 141.303 57.895 66.473 44.236 115.278 103.529 124.339 151.054.849 4.453 1.338 8.725 1.469 12.809 1.584 49.397-46.924 61.327-96.299 54.545-44.127-6.06-94.309-26.621-141.303-57.896-17.875-11.895-34.614-24.912-49.754-38.693-.609-.554-1.215-1.11-1.818-1.666-3.046-2.807-7.79-2.615-10.598.429-2.808 3.045-2.616 7.79.429 10.599.627.579 1.259 1.157 1.892 1.733 15.696 14.287 33.037 27.774 51.539 40.087 48.84 32.502 101.25 53.907 147.573 60.268 8.125 1.116 15.908 1.744 23.325 1.899-24.927 19.665-63.758 24.103-95.355 22.171-4.132-.239-7.69 2.897-7.943 7.03-.252 4.135 2.895 7.691 7.03 7.944 12.235.746 24.641.602 36.832-.66-2.984 6.985-3.979 13.936-2.93 20.784 2.159 14.087 12.653 27.112 32.082 39.818 33.292 21.771 54.317 43.936 48.709 81.344-.747 4.983-5.185 8.741-10.324 8.741-5.035 0-9.278-3.599-10.319-8.751-4.138-20.501-23.884-39.067-62.143-58.429-3.695-1.871-8.208-.392-10.079 3.305-1.87 3.696-.391 8.208 3.305 10.079 33.367 16.887 51.1 32.592 54.213 48.014 2.432 12.041 12.955 20.782 25.023 20.782 12.504 0 23.32-9.25 25.158-21.518 3.182-21.226-.61-39.637-11.593-56.287-9.013-13.662-22.503-25.947-43.74-39.837-15.442-10.097-24.009-20.035-25.465-29.535-1.028-6.711 1.309-13.758 7.139-21.482 20.834-4.416 42.251-13.229 57.301-28.542 8.627-2.519 16.426-5.802 23.23-9.776 38.836-11.583 55.614-42.964 48.149-82.118z\"/><path d=\"m252.837 173.574c28.019 18.673 102.303 64.291 135.724 64.291 8.667 0 12.468-3.146 14.658-6.296 1.495-2.151 3.061-5.856 2.029-11.286-4.5-23.685-59.678-69.718-112.368-104.834-33.545-22.356-66.814-41.002-93.678-52.5-41.81-17.897-52.386-11.708-56.706-5.493-1.495 2.15-3.061 5.855-2.029 11.286 4.503 23.685 59.681 69.718 112.37 104.832zm-55.051-94.873c25.228 11.266 56.045 28.749 86.776 49.231 30.563 20.369 58.372 41.929 78.302 60.706 20.995 19.779 26.81 30.503 27.619 34.146-3.694.673-15.936-.575-42.553-12.462-25.227-11.265-56.044-28.749-86.776-49.231-30.564-20.369-58.373-41.928-78.304-60.705-20.995-19.78-26.809-30.503-27.618-34.147 3.692-.663 15.936.575 42.554 12.462z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Tornado;\n","import React from 'react';\n\nconst Up = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"123.969px\"\n      height=\"123.97px\"\n      viewBox=\"0 0 123.969 123.97\"\n    >\n      <g>\n        <path\n          d=\"M120.266,95.584c5.301-5.801,4.801-14.801-0.8-20.301l-47.3-47.4c-2.8-2.8-6.5-4.2-10.2-4.2s-7.399,1.4-10.2,4.2\n          l-47.299,47.3c-5.5,5.5-6.1,14.6-0.8,20.3c5.6,6.101,15.099,6.3,20.9,0.5l30.3-30.3c3.899-3.9,10.2-3.9,14.1,0l30.3,30.3\n          C105.167,101.883,114.667,101.684,120.266,95.584z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Up;\n","import React from 'react';\n\nconst Wind = () => {\n  return (\n    <svg\n      id=\"Capa_1\"\n      enableBackground=\"new 0 0 512 512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      width=\"512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          d=\"m12.749 282.277c7.515-7.358 15.305-13.592 23.153-18.528 3.506-2.206 4.561-6.837 2.356-10.343-2.207-3.507-6.839-4.561-10.343-2.356-8.75 5.503-17.383 12.403-25.661 20.506-2.96 2.898-3.01 7.647-.112 10.607 1.469 1.501 3.414 2.254 5.361 2.254 1.892.001 3.785-.711 5.246-2.14z\"/><path d=\"m383.831 248.971c-29.196 29.399-60.829 45.188-94.021 46.929-28.212 1.478-57.836-6.671-90.537-24.918-41.111-22.939-89-46.423-137.11-34.649-4.024.985-6.487 5.045-5.503 9.069.984 4.023 5.045 6.486 9.069 5.503 42.823-10.482 87.614 11.629 126.234 33.177 74.767 41.719 142.181 36.21 202.512-24.54 2.919-2.939 2.903-7.689-.036-10.608-2.94-2.919-7.689-2.904-10.608.037z\"/><path d=\"m12.457 204.392c46.137-40.626 92.322-20.292 141.218 1.235 24.968 10.993 50.787 22.36 76.8 25.223 31.314 3.447 57.383-6.212 80.376-26.458 3.11-2.738 3.41-7.477.673-10.587-2.737-3.108-7.477-3.411-10.586-.672-46.139 40.625-92.323 20.291-141.218-1.235-24.968-10.993-50.787-22.36-76.8-25.223-30.113-3.315-56.394 5.341-80.376 26.458-3.11 2.738-3.41 7.477-.673 10.587 2.738 3.108 7.477 3.411 10.586.672z\"/><path d=\"m180.2 147.619c16.81 8.123 38.344 16.989 60.888 16.989 30.2 0 62.019-19.439 76.259-42.627 9.489-15.453 11.369-32.227 5.437-48.508-5.251-14.416-19.541-25.76-35.559-28.23-13.947-2.149-28.091 2.587-36.914 12.36-9.8 10.853-11.854 27.476-4.885 39.526 3.992 6.903 11.32 12.194 19.605 14.155 7.788 1.842 15.467.63 21.62-3.415 3.461-2.276 4.422-6.927 2.147-10.388-2.275-3.462-6.926-4.422-10.388-2.147-3.602 2.369-7.763 1.865-9.924 1.353-4.279-1.013-8.139-3.721-10.074-7.067-3.739-6.465-2.434-15.907 3.034-21.964 5.395-5.977 14.614-8.955 23.494-7.586 23.119 3.564 34.42 29.966 19.624 54.061-12.198 19.862-37.705 32.861-55.512 35.007-11.64 1.403-29.239.962-62.323-15.025-3.735-1.806-8.217-.239-10.018 3.49-1.803 3.729-.241 8.214 3.489 10.016z\"/><path d=\"m151.754 294.945c-19.223-9.289-44.628-19.552-70.645-16.412-21.829 2.632-51.682 17.92-66.501 42.051-9.489 15.453-11.37 32.226-5.438 48.508 5.252 14.415 19.543 25.759 35.56 28.23 2.226.343 4.454.511 6.668.511 11.654 0 22.83-4.657 30.247-12.871 9.799-10.855 11.853-27.477 4.884-39.525-3.992-6.902-11.319-12.194-19.604-14.155-7.788-1.845-15.468-.631-21.621 3.415-3.461 2.276-4.422 6.927-2.147 10.388 2.276 3.461 6.927 4.422 10.388 2.147 6.213-4.084 16.291-.696 19.997 5.714 3.739 6.464 2.435 15.906-3.033 21.963-5.397 5.978-14.619 8.958-23.494 7.586-10.604-1.635-20.37-9.258-23.751-18.538-4.371-11.996-2.982-23.947 4.126-35.523 12.198-19.862 37.705-32.861 55.512-35.007 11.634-1.404 29.235-.963 62.324 15.025 3.732 1.803 8.215.238 10.017-3.49 1.803-3.729.241-8.214-3.489-10.017z\"/><path d=\"m506.907 44.405c-1.939-5.512-6.375-9.965-11.911-11.913-16.123-5.674-33.468-6.685-50.167-2.922-4.041.911-6.58 4.925-5.669 8.966.91 4.042 4.927 6.578 8.966 5.669 11.887-2.678 24.163-2.45 35.863.605l-92.276 92.276c-6.681-25.735.71-53.644 19.668-72.603 2.588-2.588 5.374-5 8.28-7.172 3.319-2.48 3.998-7.18 1.519-10.499-2.479-3.318-7.178-3.998-10.498-1.519-3.48 2.6-6.813 5.487-9.908 8.581-24.508 24.508-32.901 61.492-21.383 94.219.112.319.259.617.386.928l-20.182 20.182c-2.929 2.929-2.929 7.678 0 10.608 2.93 2.929 7.678 2.929 10.608 0l20.185-20.185c.306.125.6.27.914.38 9.745 3.43 19.862 5.094 29.919 5.093 23.723-.001 47.091-9.265 64.302-26.476 24.509-24.506 32.902-61.49 21.384-94.218zm-31.992 83.612c-18.956 18.956-46.857 26.348-72.589 19.672l92.262-92.262c6.675 25.732-.715 53.634-19.673 72.59z\"/><path d=\"m252.066 352.052c-.318.112-.616.258-.926.385l-20.181-20.181c-2.93-2.929-7.679-2.929-10.608 0s-2.929 7.678 0 10.608l20.185 20.185c-.125.306-.27.601-.38.915-11.519 32.729-3.125 69.713 21.382 94.22 17.214 17.213 40.578 26.476 64.302 26.476 10.056 0 20.177-1.665 29.918-5.093 5.571-1.96 9.99-6.451 11.912-11.912 11.519-32.729 3.124-69.713-21.383-94.22-24.508-24.508-61.494-32.901-94.221-21.383zm73.737 117.617c-19.796-.001-39.297-7.731-53.658-22.092-18.956-18.956-26.348-46.857-19.672-72.59l92.269 92.269c-6.237 1.619-12.602 2.413-18.939 2.413zm29.546-13.023-92.279-92.279c25.779-6.696 53.678.744 72.608 19.675 18.96 18.96 26.352 46.869 19.671 72.604z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Wind;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n\tClear,\n\tClouds,\n\tFog,\n\tMist,\n\tRain,\n\tSnow,\n\tThunderstorm,\n\tTornado,\n\tWind\n} from './../../base/Images/index';\nimport { Text } from './../../base/Typography/';\n\nconst Condition = ({ icon, description, type }) => {\n\tconst renderIcon = () => {\n\t\tswitch (icon) {\n\t\t\tcase 'mist':\n\t\t\tcase 'smoke':\n\t\t\tcase 'haze':\n\t\t\tcase 'ash':\n\t\t\t\treturn <Mist  />;\n\t\t\tcase 'fog':\n\t\t\tcase 'sand':\n\t\t\t\treturn <Fog />;\n\t\t\tcase 'clear':\n\t\t\t\treturn <Clear />;\n\t\t\tcase 'snow':\n\t\t\t\treturn <Snow />;\n\t\t\tcase 'clouds':\n\t\t\t\treturn <Clouds />;\n\t\t\tcase 'thunderstorm':\n\t\t\t\treturn <Thunderstorm />;\n\t\t\tcase 'drizzle':\n\t\t\tcase 'rain':\n\t\t\t\treturn <Rain />;\n\t\t\tcase 'squall':\n\t\t\t\treturn <Wind />;\n\t\t\tcase 'tornado':\n\t\t\t\treturn <Tornado />;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t};\n\t};\n\n\treturn (\n\t\t<div className={`weather-condition${type ? ` weather-condition--${type}` : ''}`}>\n\t\t\t<Text className=\"weather-condition__description\">\n\t\t\t\t{description}\n\t\t\t</Text>\n\t\t\t<span className=\"weather-condition__icon\">\n\t\t\t\t{renderIcon()}\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nCondition.propTypes = {\n\tdescription: PropTypes.string,\n\ticon: PropTypes.string,\n\ttype: PropTypes.string,\n};\n\nexport default Condition;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport moment from 'moment';\n\nimport { Title } from './../../base/Typography/';\n\nconst Day = ({ date, isToday, isForecast }) => {\n\tconst dayFormat = 'dddd';\n\n\treturn (\n\t\t<Title type={isForecast ? 'h3' : 'h1'} className=\"weather-day\">\n\t\t\t{isToday ? 'Today' : moment(date).format(dayFormat)}\n\t\t</Title>\n\t);\n};\n\nDay.propTypes = {\n\tdate: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\tisToday: PropTypes.bool,\n\tisForecast: PropTypes.bool,\n};\n\nexport default Day;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport moment from 'moment';\n\nimport { Title } from './../../base/Typography';\n\nconst Date = ({ date }) => {\n\tconst dayFormat = 'D MMM YYYY';\n\n\treturn (\n\t\t<Title type=\"h2\" className=\"weather-date\">\n\t\t\t{moment(date).format(dayFormat)}\n\t\t</Title>\n\t);\n};\n\nDate.propTypes = {\n\tdate: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default Date;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Text } from './../../base/Typography/';\nimport { Thermometer } from './../../base/Images';\n\nconst FeelsLike = ({ temp }) => {\n\treturn (\n\t\t<Text className=\"weather-feels-like\">\n\t\t\t<span className=\"weather-feels-like__icon\">\n\t\t\t\t<Thermometer />\n\t\t\t</span>\n\t\t\t<span className=\"weather-feels-like__label\">\n\t\t\t\tFeels like <span className=\"temp\">{Math.round(temp)}</span>\n\t\t\t</span>\n\t\t</Text>\n\t);\n};\n\nFeelsLike.propTypes = {\n\ttemp: PropTypes.number,\n};\n\nexport default FeelsLike;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Text } from './../../base/Typography/';\nimport { Humidity as HumidityIcon } from './../../base/Images';\n\nconst Humidity = ({ value }) => {\n\treturn (\n\t\t<Text className=\"weather-humidity\">\n\t\t\t<span className=\"weather-humidity__icon\">\n\t\t\t\t<HumidityIcon />\n\t\t\t</span>\n\t\t\t<span className=\"weather-humidity__label\">\n\t\t\t\tHumidity {value}\n\t\t\t</span>\n\t\t</Text>\n\t);\n};\n\nHumidity.propTypes = {\n\ttemp: PropTypes.number,\n\tclassName: PropTypes.string,\n};\n\nexport default Humidity;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst Link = ({ path, label }) => {\n\treturn (\n\t\t<RouterLink to={path}>\n\t\t\t<span>{label}</span>\n\t\t</RouterLink>\n\t);\n};\n\nLink.propTypes = {\n\tpath: PropTypes.string,\n\tlabel: PropTypes.string,\n};\n\nexport default Link;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Text } from './../../base/Typography/';\n\nconst Temp = ({ temp }) => {\n\treturn (\n\t\t<Text className=\"weather-temp\">\n\t\t\t{Math.round(temp)}\n\t\t</Text>\n\t);\n};\n\nTemp.propTypes = {\n\ttemp: PropTypes.number,\n};\n\nexport default Temp;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport moment from 'moment';\n\nimport { Condition, Day, Date, FeelsLike, Humidity, Link, Temp } from './../Items/';\n\nimport './style.scss';\n\nconst Weather = ({ weather, isForecast, isToday, isDay }) => {\n\tconst dayOfWeekFormat = 'dddd';\n\n\treturn (\n\t\t<div className=\"weather\">\n\t\t\t<Day\n\t\t\t\tdate={isToday ? moment() : weather.dt_txt}\n\t\t\t\tisToday={isToday}\n\t\t\t\tisForecast={isForecast}\n\t\t\t/>\n\t\t\t{!isForecast && (\n\t\t\t\t<Date date={isToday ? moment() : weather.dt_txt} />\n\t\t\t)}\n\t\t\t{!isForecast && (\n\t\t\t\t<Condition\n\t\t\t\t\ticon={weather.weather[0].main.toLowerCase()}\n\t\t\t\t\tdescription={weather.weather[0].description}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Temp temp={weather.main.temp} />\n\t\t\t{isDay && (\n\t\t\t\t<Humidity value={weather.main.humidity} />\n\t\t\t)}\n\t\t\t{isDay && (\n\t\t\t\t<FeelsLike temp={weather.main.feels_like} />\n\t\t\t)}\n\t\t\t{!isDay && (\n\t\t\t\t<div className=\"weather-link\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tpath={`/${moment(weather.dt_txt).format(dayOfWeekFormat).toLowerCase()}`}\n\t\t\t\t\t\tlabel={`Open ${moment(weather.dt_txt).format(dayOfWeekFormat).toLowerCase()} weather`}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nWeather.propTypes = {\n\tweather: PropTypes.object,\n\tisForecast: PropTypes.bool,\n\tisToday: PropTypes.bool,\n\tisDay: PropTypes.bool,\n};\n\nexport default Weather;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport moment from 'moment';\n\nimport Weather from './../Weather';\n\nimport './style.scss';\n\nconst Forecast = ({ forecast }) => {\n\tconst renderForecast = () => {\n\t\treturn forecast.map((item, index) => {\n\t\t\tif (moment(item.dt_txt).day() !== moment().day()) {\n\t\t\t\treturn (\n\t\t\t\t\t<Weather\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tweather={item}\n\t\t\t\t\t\tisForecast\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t};\n\n\treturn (\n\t\t<div className=\"forecast\">\n\t\t\t{renderForecast()}\n\t\t</div>\n\t);\n};\n\nForecast.propTypes = {\n\tforecast: PropTypes.array,\n};\n\nexport default Forecast;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Placeholder, Search, Up } from './../../base/Images/';\n\nimport './style.scss';\n\nconst City = ({ handleCity, changeCity, city, showForm, setShowForm }) => {\n\tconst toggleForm = () => {\n\t\tsetShowForm(!showForm)\n\t};\n\n\treturn (\n\t\t<div className={`city${showForm ? ' city--active' : ' city--hidden'}`}>\n\t\t\t<div className=\"city-form\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"city-input\"\n\t\t\t\t\ttype=\"input\"\n\t\t\t\t\tvalue={city}\n\t\t\t\t\tonChange={(value) => handleCity(value)}\n\t\t\t\t\tplaceholder={city}\n\t\t\t\t/>\n\t\t\t\t<button onClick={changeCity} className=\"city-search-button\">\n\t\t\t\t\t<span className=\"city-search-button__icon\">\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"city-search-button__label\">Search</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{showForm && (\n\t\t\t\t<button onClick={toggleForm} className=\"city-hide-button\">\n\t\t\t\t\t<span className=\"city-hide-button__icon\">\n\t\t\t\t\t\t<Up />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"city-hide-button__label\">Hide form</span>\n\t\t\t\t</button>\n\t\t\t)}\n\n\t\t\t<button onClick={toggleForm} className=\"city-show-button\">\n\t\t\t\t<span className=\"city-show-button__icon\">\n\t\t\t\t\t<Placeholder />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"city-show-button__label\">{city}</span>\n\t\t\t</button>\n\n\t\t</div>\n\t);\n};\n\nCity.propTypes = {\n\thandleCity: PropTypes.func,\n\tchangeCity: PropTypes.func,\n\tcity: PropTypes.string,\n\tshowForm: PropTypes.bool,\n\tsetShowForm: PropTypes.func,\n};\n\nexport default City;\n","import moment from 'moment';\n\n//const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_KEY = 'b8a3d3bca5282d94f224c4077ba5b4ca';\n\nexport const getWeather = async (city) => {\n  const options = {\n    method: 'get'\n  };\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;\n  const request = await fetch(url, options);\n\n  if (request.status === 200) {\n    return request.json();\n  } else {\n    console.log('retur null')\n    return null;\n  }\n};\n\nexport const getForecast = async (city, date) => {\n  const options = {\n    method: 'get'\n  };\n\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`;\n  const request = await fetch(url, options);\n  let forecast = [];\n\n  if (request.status === 200) {\n    let response = await request.json();\n\n    if (response.list) {\n      response.list.map((item) => {\n        if (date) {\n          if (moment(item.dt_txt).isSame(moment(date), 'day')) {\n            forecast.push(item);\n          }\n        } else {\n          if (moment(item.dt_txt).hour() === 12) {\n            forecast.push(item);\n          }\n        }\n      });\n    }\n    return forecast;\n  } else {\n    return null;\n  }\n};\n\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nimport Alert from './../../base/Alert';\nimport Container from './../../base/Container';\nimport Wrapper from './../../base/Wrapper';\nimport Loader from './../../base/Loader';\nimport Weather from './../../weather/Weather';\nimport Forecast from './../../weather/Forecast';\nimport City from './../../weather/City';\nimport { getForecast, getWeather } from './../../../controllers/weather/';\n\nconst Main = ({ city, handleCity }) => {\n\tconst [showForm, setShowForm] = useState(false);\n\tconst [isWeatherLoaded, setWeatherLoaded] = useState(false);\n\tconst [isForecastLoaded, setForecastLoaded] = useState(false);\n\tconst [weather, setWeather] = useState();\n\tconst [forecast, setForecast] = useState();\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst data = await getWeather(city);\n\t\t\tsetWeather(data);\n\t\t\tsetWeatherLoaded(true);\n\t\t};\n\t\tif (!isWeatherLoaded) fetchData();\n\t}, [isWeatherLoaded, city]);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst data = await getForecast(city);\n\t\t\tsetForecast(data);\n\t\t\tsetForecastLoaded(true);\n\t\t};\n\t\tif (!isForecastLoaded) fetchData();\n\t}, [isForecastLoaded, city]);\n\n\tconst changeCity = () => {\n\t\tsetForecastLoaded(false)\n\t\tsetWeatherLoaded(false);\n\t\tsetShowForm(false);\n\t};\n\n\tif (isWeatherLoaded && isForecastLoaded) {\n\t\treturn (\n\t\t\t<Wrapper>\n\t\t\t\t<City\n\t\t\t\t\tcity={city}\n\t\t\t\t\thandleCity={handleCity}\n\t\t\t\t\tchangeCity={changeCity}\n\t\t\t\t\tshowForm={showForm}\n\t\t\t\t\tsetShowForm={setShowForm}\n\t\t\t\t/>\n\t\t\t\t{weather ? (\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Weather weather={weather} isToday />\n\t\t\t\t\t\t<Forecast forecast={forecast} />\n\t\t\t\t\t</Container>\n\t\t\t\t) : (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\ttitle=\"Sorry!\"\n\t\t\t\t\t\ttext={`Weather for ${city} not found. Try search another city`}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Wrapper>\n\t\t);\n\n\t} else return <Loader />;\n};\n\nMain.propTypes = {\n\tcity: PropTypes.string,\n\tformCity: PropTypes.string,\n\tsetCity: PropTypes.func,\n\thandleCity: PropTypes.func,\n};\n\nexport default Main;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Arrow } from './../Images';\n\nimport './style.scss';\n\nconst BackButton = ({ path }) => {\n\treturn (\n\t\t<div className=\"back-button\">\n\t\t\t<Link to={`/${path}`}>\n\t\t\t\t<Arrow color='#e6e6fa' />\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nBackButton.propTypes = {\n\tpath: PropTypes.string,\n};\n\nexport default BackButton;\n","import React from 'react';\n\nimport './style.scss';\n\nconst ForecastChart = () => {\n  return (\n    <div className=\"forecast-chart\">\n      <canvas className=\"forecast-chart__canvas\" id=\"canvas\" height=\"100\" />\n      <div className=\"forecast-chart__tooltip\" id=\"tooltip\" />\n    </div>\n  );\n};\n\nexport default ForecastChart;\n","import Chart from 'chart.js';\nimport moment from 'moment';\n\nexport const getForecastChart = (forecast) => {\n    const canvasEl = document.getElementById('canvas');\n    const ctx = canvasEl.getContext('2d');\n\n    const getLabels = () => {\n        return forecast.map((item) => {\n            return moment(item.dt_txt).format('HH');\n        });\n    };\n\n    const getData = () => {\n        return forecast.map((item) => {\n            return Math.round(item.main.temp);\n        });\n    };\n\n    const getTooltipTitle = (tooltipModel) => {\n        return '<div class=\"forecast-tooltip__title\">' + tooltipModel.dataPoints[0].label + ':00' + '</div>';\n    };\n\n    const getTooltipBody = (tooltipModel) => {\n        return '<div class=\"forecast-tooltip__body\">' + tooltipModel.dataPoints[0].value + '</div>';\n    };\n\n    const getTooltip = (tooltipModel) => {\n        let tooltipEl = document.getElementById('tooltip');\n        if (!tooltipEl) {\n            tooltipEl = document.createElement('div');\n            tooltipEl.innerHTML = '<div></div>';\n            document.body.appendChild(tooltipEl);\n        }\n\n        if (tooltipModel.opacity === 0) {\n            tooltipEl.style.opacity = 0;\n            return;\n        }\n\n        tooltipEl.classList.remove('above', 'below', 'no-transform');\n        tooltipEl.classList.add('forecast-tooltip');\n\n        if (tooltipModel.yAlign) {\n            tooltipEl.classList.add(tooltipModel.yAlign);\n        } else {\n            tooltipEl.classList.add('no-transform');\n        }\n\n        let innerHtml;\n\n        if (tooltipModel) {\n            innerHtml = getTooltipTitle(tooltipModel);\n            innerHtml += getTooltipBody(tooltipModel);\n        }\n\n        tooltipEl.innerHTML = innerHtml;\n        let tooltipXOffset = -60;\n        let tooltipYOffset = -82;\n        tooltipEl.style.opacity = 1;\n        tooltipEl.style.left = tooltipModel.caretX + tooltipXOffset + 'px';\n        tooltipEl.style.top = tooltipModel.caretY + tooltipYOffset + 'px';\n        tooltipEl.style.padding = 10 + 'px';\n        tooltipEl.style.pointerEvents = 'none';\n    };\n\n    const legendOptions = {\n        display: false,\n    };\n\n    const tooltipOptions = {\n        enabled: false,\n        custom: (tooltipModel) => getTooltip(tooltipModel),\n    };\n\n    const scalesOptions = {\n        xAxes: [{\n            display: false,\n            gridLines: {\n                lineWidth: 0,\n                display: false,\n            }\n        }],\n        yAxes: [{\n            display: false,\n            gridLines: {\n                lineWidth: 0,\n                display: false,\n            }\n        }]\n    };\n\n    const layoutOptions = {\n        padding: {\n            left: 50,\n            right: 50,\n            top: 50,\n            bottom: 50\n        }\n    };\n\n    const options = {\n        legend: legendOptions,\n        tooltips: tooltipOptions,\n        scales: scalesOptions,\n        layout: layoutOptions,\n    };\n\n    new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: getLabels(),\n            datasets: [{\n                data: getData(),\n                backgroundColor: 'rgba(0, 0, 0, 0)',\n                pointBackgroundColor: '#f5f5f5',\n                pointHoverBackgroundColor: '#8129d3',\n                borderColor: '#f5f5f5',\n                borderWidth: 4,\n                lineTension: 0.3,\n            }],\n        },\n        options: options,\n    });\n};\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nimport moment from 'moment';\n\nimport Alert from './../../base/Alert';\nimport Container from './../../base/Container';\nimport Wrapper from './../../base/Wrapper';\nimport Loader from './../../base/Loader';\nimport BackButton from './../../base/BackButton';\nimport Weather from './../../weather/Weather';\nimport City from './../../weather/City';\nimport ForecastChart from './../../weather/ForecastChart/';\nimport { getForecastChart } from './../../weather/ForecastChart/getForecastChart';\nimport { getForecast, getWeather } from './../../../controllers/weather/';\n\nconst WEATHER_HOUR = 12;\n\nconst Day = ({ date, city, setCity, handleCity }) => {\n\tconst [showForm, setShowForm] = useState(false);\n\tconst [weather, setWeather] = useState();\n\tconst [isWeatherLoaded, setWeatherLoaded] = useState(false);\n\tconst isToday = !moment(date).isSame(moment(), 'day');\n\n\tconst changeCity = () => {\n\t\tsetCity(city);\n\t\tsetWeatherLoaded(false);\n\t\tsetShowForm(false);\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchWeather = async () => {\n\t\t\tlet data;\n\t\t\tif (moment(date).isSame(moment(), 'day')) {\n\t\t\t\tdata = await getWeather(city);\n\t\t\t} else {\n\t\t\t\tdata = await getForecast(city, date.toDate());\n\t\t\t}\n\t\t\tsetWeather(data);\n\t\t\tsetWeatherLoaded(true);\n\t\t};\n\t\tif (!isWeatherLoaded) fetchWeather();\n\t}, [isWeatherLoaded, city]);\n\n\tuseEffect(() => {\n\t\tif (weather) {\n\t\t\tif (!(moment(date).isSame(moment(), 'day'))) {\n\t\t\t\tif (isWeatherLoaded) {\n\t\t\t\t\tgetForecastChart(weather);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [isWeatherLoaded]);\n\n\tconst renderWeather = () => {\n\t\tlet preview;\n\n\t\tif (moment(date).isSame(moment(), 'day')) {\n\t\t\tpreview = weather;\n\t\t} else {\n\t\t\tweather.map((item) => {\n\t\t\t\tif (moment(item.dt_txt).get('hour') === WEATHER_HOUR) preview = item;\n\t\t\t});\n\t\t}\n\n\t\treturn preview;\n\t};\n\n\tif (isWeatherLoaded) {\n\t\treturn (\n\t\t\t<Wrapper>\n\t\t\t\t<City\n\t\t\t\t\tcity={city}\n\t\t\t\t\thandleCity={handleCity}\n\t\t\t\t\tchangeCity={changeCity}\n\t\t\t\t\tshowForm={showForm}\n\t\t\t\t\tsetShowForm={setShowForm}\n\t\t\t\t/>\n\t\t\t\t{weather ? (\n\t\t\t\t<Container>\n\t\t\t\t\t<Weather weather={renderWeather()} isDay />\n\t\t\t\t\t{isToday && (\n\t\t\t\t\t\t<ForecastChart />\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t\t) : (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\ttitle=\"Sorry!\"\n\t\t\t\t\t\ttext={`Weather for ${city} not found. Try search another city`}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<BackButton path=\"\" />\n\t\t\t</Wrapper>\n\t\t);\n\t} else return <Loader />\n};\n\nDay.propTypes = {\n\tdate: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\tcity: PropTypes.string,\n\tformCity: PropTypes.string,\n\tsetCity: PropTypes.func,\n\thandleCity: PropTypes.func,\n};\n\nexport default Day;\n","import React from 'react';\n\nimport Alert from './../../base/Alert/';\nimport BackButton from './../../base/BackButton/';\nimport Container from './../../base/Container/';\nimport Wrapper from './../../base/Wrapper/';\n\nconst Error = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Container>\n\t\t\t\t<Alert title=\"Ooooooops!\" text=\"Data not found\" />\n\t\t\t</Container>\n\t\t\t<BackButton path=\"\" />\n\t\t</Wrapper>\n\t);\n};\n\nexport default Error;\n","import React, { useEffect, useState } from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\nimport moment from 'moment';\n\nimport Main from './components/pages/Main';\nimport Day from './components/pages/Day';\nimport Error from './components/pages/Error';\nimport { useLocalStorage } from './hooks/useLocalStorage';\n\nimport './styles/main.scss';\n\nconst FORECAST_LENGTH = 5;\n\nconst App = () => {\n  const today = moment();\n\n  const initialCity = 'Omsk';\n\n  const [city, setCity] = useLocalStorage('city', initialCity);\n\tconst [formCity, setFormCity] = useState('');\n\n\tconst handleCity = (e) => {\n    console.log(e.target.value)\n\t\tsetCity(e.target.value)\n\t};\n\n\n  const renderDays = () => {\n    let days = [];\n\n    for (let d = 0; d < FORECAST_LENGTH; d++) {\n      const date = moment(today).set('date', today.get('date') + d);\n      const day = date.format('dddd');\n\n      days.push(\n        <Route key={day} path={`/${day}`}>\n          <Day\n            date={date}\n            city={city}\n            setCity={setCity}\n            formCity={formCity}\n            setFormCity={setFormCity}\n            handleCity={handleCity}\n          />\n         </Route>\n      );\n    }\n\n    return days;\n  };\n\n  return (\n    <Switch>\n      {renderDays()}\n      <Route exact path=\"/\">\n        <Main\n          city={city}\n          setCity={setCity}\n          formCity={formCity}\n          setFormCity={setFormCity}\n          handleCity={handleCity}\n        />\n      </Route>\n      <Route path=\"*\">\n        <Error />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(key);\n\n        if (jsonValue != null) {\n            return JSON.parse(jsonValue);\n        }\n\n        return initialValue;\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n\n    return [value, setValue];\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router basename=\"/weather-app\">\n    <App />\n  </Router>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}